// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: LinkAttributionProto/tracking_click.proto

package linkAttribution

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrackingClickUpsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unid      string                 `protobuf:"bytes,1,opt,name=unid,proto3" json:"unid,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	LinkUnid  string                 `protobuf:"bytes,5,opt,name=linkUnid,proto3" json:"linkUnid,omitempty"`
}

func (x *TrackingClickUpsert) Reset() {
	*x = TrackingClickUpsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingClickUpsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingClickUpsert) ProtoMessage() {}

func (x *TrackingClickUpsert) ProtoReflect() protoreflect.Message {
	mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingClickUpsert.ProtoReflect.Descriptor instead.
func (*TrackingClickUpsert) Descriptor() ([]byte, []int) {
	return file_LinkAttributionProto_tracking_click_proto_rawDescGZIP(), []int{0}
}

func (x *TrackingClickUpsert) GetUnid() string {
	if x != nil {
		return x.Unid
	}
	return ""
}

func (x *TrackingClickUpsert) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TrackingClickUpsert) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *TrackingClickUpsert) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *TrackingClickUpsert) GetLinkUnid() string {
	if x != nil {
		return x.LinkUnid
	}
	return ""
}

type TrackingClickUpsertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *TrackingClickUpsert `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32                `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *TrackingClickUpsertResponse) Reset() {
	*x = TrackingClickUpsertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingClickUpsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingClickUpsertResponse) ProtoMessage() {}

func (x *TrackingClickUpsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingClickUpsertResponse.ProtoReflect.Descriptor instead.
func (*TrackingClickUpsertResponse) Descriptor() ([]byte, []int) {
	return file_LinkAttributionProto_tracking_click_proto_rawDescGZIP(), []int{1}
}

func (x *TrackingClickUpsertResponse) GetData() *TrackingClickUpsert {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TrackingClickUpsertResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TrackingClickUpsertResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type TrackingClickSecurity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppUnid string `protobuf:"bytes,1,opt,name=appUnid,proto3" json:"appUnid,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *TrackingClickSecurity) Reset() {
	*x = TrackingClickSecurity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingClickSecurity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingClickSecurity) ProtoMessage() {}

func (x *TrackingClickSecurity) ProtoReflect() protoreflect.Message {
	mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingClickSecurity.ProtoReflect.Descriptor instead.
func (*TrackingClickSecurity) Descriptor() ([]byte, []int) {
	return file_LinkAttributionProto_tracking_click_proto_rawDescGZIP(), []int{2}
}

func (x *TrackingClickSecurity) GetAppUnid() string {
	if x != nil {
		return x.AppUnid
	}
	return ""
}

func (x *TrackingClickSecurity) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type TrackingClickCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkUnid          string                 `protobuf:"bytes,1,opt,name=linkUnid,proto3" json:"linkUnid,omitempty"`
	UserAgent         string                 `protobuf:"bytes,3,opt,name=userAgent,proto3" json:"userAgent,omitempty"`
	Ip                string                 `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	ScreenWidth       int32                  `protobuf:"varint,5,opt,name=screenWidth,proto3" json:"screenWidth,omitempty"`
	ScreenHeight      int32                  `protobuf:"varint,6,opt,name=screenHeight,proto3" json:"screenHeight,omitempty"`
	Resolution        string                 `protobuf:"bytes,7,opt,name=resolution,proto3" json:"resolution,omitempty"`
	ApiFrom           string                 `protobuf:"bytes,8,opt,name=apiFrom,proto3" json:"apiFrom,omitempty"`
	Security          *TrackingClickSecurity `protobuf:"bytes,9,opt,name=security,proto3" json:"security,omitempty"`
	ClientSessionUnid string                 `protobuf:"bytes,10,opt,name=client_session_unid,json=clientSessionUnid,proto3" json:"client_session_unid,omitempty"`
}

func (x *TrackingClickCreateRequest) Reset() {
	*x = TrackingClickCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingClickCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingClickCreateRequest) ProtoMessage() {}

func (x *TrackingClickCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingClickCreateRequest.ProtoReflect.Descriptor instead.
func (*TrackingClickCreateRequest) Descriptor() ([]byte, []int) {
	return file_LinkAttributionProto_tracking_click_proto_rawDescGZIP(), []int{3}
}

func (x *TrackingClickCreateRequest) GetLinkUnid() string {
	if x != nil {
		return x.LinkUnid
	}
	return ""
}

func (x *TrackingClickCreateRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *TrackingClickCreateRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *TrackingClickCreateRequest) GetScreenWidth() int32 {
	if x != nil {
		return x.ScreenWidth
	}
	return 0
}

func (x *TrackingClickCreateRequest) GetScreenHeight() int32 {
	if x != nil {
		return x.ScreenHeight
	}
	return 0
}

func (x *TrackingClickCreateRequest) GetResolution() string {
	if x != nil {
		return x.Resolution
	}
	return ""
}

func (x *TrackingClickCreateRequest) GetApiFrom() string {
	if x != nil {
		return x.ApiFrom
	}
	return ""
}

func (x *TrackingClickCreateRequest) GetSecurity() *TrackingClickSecurity {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *TrackingClickCreateRequest) GetClientSessionUnid() string {
	if x != nil {
		return x.ClientSessionUnid
	}
	return ""
}

type TrackingClickDetailByQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Security         *TrackingClickSecurity `protobuf:"bytes,1,opt,name=security,proto3" json:"security,omitempty"`
	UserAgent        string                 `protobuf:"bytes,3,opt,name=userAgent,proto3" json:"userAgent,omitempty"`
	Ip               string                 `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	ScreenWidth      int32                  `protobuf:"varint,5,opt,name=screenWidth,proto3" json:"screenWidth,omitempty"`
	ScreenHeight     int32                  `protobuf:"varint,6,opt,name=screenHeight,proto3" json:"screenHeight,omitempty"`
	ScreenResolution string                 `protobuf:"bytes,7,opt,name=screenResolution,proto3" json:"screenResolution,omitempty"`
}

func (x *TrackingClickDetailByQueryRequest) Reset() {
	*x = TrackingClickDetailByQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingClickDetailByQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingClickDetailByQueryRequest) ProtoMessage() {}

func (x *TrackingClickDetailByQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingClickDetailByQueryRequest.ProtoReflect.Descriptor instead.
func (*TrackingClickDetailByQueryRequest) Descriptor() ([]byte, []int) {
	return file_LinkAttributionProto_tracking_click_proto_rawDescGZIP(), []int{4}
}

func (x *TrackingClickDetailByQueryRequest) GetSecurity() *TrackingClickSecurity {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *TrackingClickDetailByQueryRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *TrackingClickDetailByQueryRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *TrackingClickDetailByQueryRequest) GetScreenWidth() int32 {
	if x != nil {
		return x.ScreenWidth
	}
	return 0
}

func (x *TrackingClickDetailByQueryRequest) GetScreenHeight() int32 {
	if x != nil {
		return x.ScreenHeight
	}
	return 0
}

func (x *TrackingClickDetailByQueryRequest) GetScreenResolution() string {
	if x != nil {
		return x.ScreenResolution
	}
	return ""
}

type TrackingClick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unid              string                   `protobuf:"bytes,1,opt,name=unid,proto3" json:"unid,omitempty"`
	CreatedAt         *timestamppb.Timestamp   `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt         *timestamppb.Timestamp   `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt         *timestamppb.Timestamp   `protobuf:"bytes,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	LinkUnid          string                   `protobuf:"bytes,5,opt,name=linkUnid,proto3" json:"linkUnid,omitempty"`
	AppUnid           string                   `protobuf:"bytes,6,opt,name=appUnid,proto3" json:"appUnid,omitempty"`
	ClientSessionUnid string                   `protobuf:"bytes,7,opt,name=clientSessionUnid,proto3" json:"clientSessionUnid,omitempty"`
	UserAgent         string                   `protobuf:"bytes,8,opt,name=userAgent,proto3" json:"userAgent,omitempty"`
	ScreenSize        *TrackingClickScreenSize `protobuf:"bytes,10,opt,name=screenSize,proto3" json:"screenSize,omitempty"`
	Ip                string                   `protobuf:"bytes,11,opt,name=ip,proto3" json:"ip,omitempty"`
	ApiFrom           string                   `protobuf:"bytes,12,opt,name=api_from,json=apiFrom,proto3" json:"api_from,omitempty"`
}

func (x *TrackingClick) Reset() {
	*x = TrackingClick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingClick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingClick) ProtoMessage() {}

func (x *TrackingClick) ProtoReflect() protoreflect.Message {
	mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingClick.ProtoReflect.Descriptor instead.
func (*TrackingClick) Descriptor() ([]byte, []int) {
	return file_LinkAttributionProto_tracking_click_proto_rawDescGZIP(), []int{5}
}

func (x *TrackingClick) GetUnid() string {
	if x != nil {
		return x.Unid
	}
	return ""
}

func (x *TrackingClick) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TrackingClick) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *TrackingClick) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *TrackingClick) GetLinkUnid() string {
	if x != nil {
		return x.LinkUnid
	}
	return ""
}

func (x *TrackingClick) GetAppUnid() string {
	if x != nil {
		return x.AppUnid
	}
	return ""
}

func (x *TrackingClick) GetClientSessionUnid() string {
	if x != nil {
		return x.ClientSessionUnid
	}
	return ""
}

func (x *TrackingClick) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *TrackingClick) GetScreenSize() *TrackingClickScreenSize {
	if x != nil {
		return x.ScreenSize
	}
	return nil
}

func (x *TrackingClick) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *TrackingClick) GetApiFrom() string {
	if x != nil {
		return x.ApiFrom
	}
	return ""
}

type TrackingClickScreenSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width      int32  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height     int32  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Resolution string `protobuf:"bytes,4,opt,name=resolution,proto3" json:"resolution,omitempty"`
}

func (x *TrackingClickScreenSize) Reset() {
	*x = TrackingClickScreenSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingClickScreenSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingClickScreenSize) ProtoMessage() {}

func (x *TrackingClickScreenSize) ProtoReflect() protoreflect.Message {
	mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingClickScreenSize.ProtoReflect.Descriptor instead.
func (*TrackingClickScreenSize) Descriptor() ([]byte, []int) {
	return file_LinkAttributionProto_tracking_click_proto_rawDescGZIP(), []int{6}
}

func (x *TrackingClickScreenSize) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *TrackingClickScreenSize) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *TrackingClickScreenSize) GetResolution() string {
	if x != nil {
		return x.Resolution
	}
	return ""
}

type TrackingClickDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *TrackingClick `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Message string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32          `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *TrackingClickDetailResponse) Reset() {
	*x = TrackingClickDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingClickDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingClickDetailResponse) ProtoMessage() {}

func (x *TrackingClickDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingClickDetailResponse.ProtoReflect.Descriptor instead.
func (*TrackingClickDetailResponse) Descriptor() ([]byte, []int) {
	return file_LinkAttributionProto_tracking_click_proto_rawDescGZIP(), []int{7}
}

func (x *TrackingClickDetailResponse) GetData() *TrackingClick {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TrackingClickDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TrackingClickDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type TrackingClickUpdateClientSessionUnidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Security          *TrackingClickSecurity `protobuf:"bytes,1,opt,name=security,proto3" json:"security,omitempty"`
	ClientSessionUnid string                 `protobuf:"bytes,3,opt,name=clientSessionUnid,proto3" json:"clientSessionUnid,omitempty"`
}

func (x *TrackingClickUpdateClientSessionUnidRequest) Reset() {
	*x = TrackingClickUpdateClientSessionUnidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingClickUpdateClientSessionUnidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingClickUpdateClientSessionUnidRequest) ProtoMessage() {}

func (x *TrackingClickUpdateClientSessionUnidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_LinkAttributionProto_tracking_click_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingClickUpdateClientSessionUnidRequest.ProtoReflect.Descriptor instead.
func (*TrackingClickUpdateClientSessionUnidRequest) Descriptor() ([]byte, []int) {
	return file_LinkAttributionProto_tracking_click_proto_rawDescGZIP(), []int{8}
}

func (x *TrackingClickUpdateClientSessionUnidRequest) GetSecurity() *TrackingClickSecurity {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *TrackingClickUpdateClientSessionUnidRequest) GetClientSessionUnid() string {
	if x != nil {
		return x.ClientSessionUnid
	}
	return ""
}

var File_LinkAttributionProto_tracking_click_proto protoreflect.FileDescriptor

var file_LinkAttributionProto_tracking_click_proto_rawDesc = []byte{
	0x0a, 0x29, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6c, 0x69, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x68, 0x61,
	0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xf3, 0x01, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43,
	0x6c, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x64, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x6e, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x6e, 0x69, 0x64, 0x22, 0x7a, 0x0a, 0x1b, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x43, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x55, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x55, 0x6e, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xcf, 0x02, 0x0a, 0x1a, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b,
	0x55, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b,
	0x55, 0x6e, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x46,
	0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x69, 0x46, 0x72,
	0x6f, 0x6d, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x64, 0x22, 0xfc, 0x01, 0x0a, 0x21,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x42, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbd, 0x03, 0x0a, 0x0d, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x64,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x6e, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x6e, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x55, 0x6e, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x55, 0x6e, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x12, 0x3d, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53,
	0x69, 0x7a, 0x65, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x69, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0x67, 0x0a, 0x17, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x74, 0x0a, 0x1b, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43,
	0x6c, 0x69, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x2b, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e,
	0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x64,
	0x32, 0xe0, 0x02, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69,
	0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x13, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x1a, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x42, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x24, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43,
	0x6c, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x64, 0x12, 0x31, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x63, 0x6b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x1a, 0x5a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f,
	0x6c, 0x69, 0x6e, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_LinkAttributionProto_tracking_click_proto_rawDescOnce sync.Once
	file_LinkAttributionProto_tracking_click_proto_rawDescData = file_LinkAttributionProto_tracking_click_proto_rawDesc
)

func file_LinkAttributionProto_tracking_click_proto_rawDescGZIP() []byte {
	file_LinkAttributionProto_tracking_click_proto_rawDescOnce.Do(func() {
		file_LinkAttributionProto_tracking_click_proto_rawDescData = protoimpl.X.CompressGZIP(file_LinkAttributionProto_tracking_click_proto_rawDescData)
	})
	return file_LinkAttributionProto_tracking_click_proto_rawDescData
}

var file_LinkAttributionProto_tracking_click_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_LinkAttributionProto_tracking_click_proto_goTypes = []interface{}{
	(*TrackingClickUpsert)(nil),                         // 0: chat.TrackingClickUpsert
	(*TrackingClickUpsertResponse)(nil),                 // 1: chat.TrackingClickUpsertResponse
	(*TrackingClickSecurity)(nil),                       // 2: chat.TrackingClickSecurity
	(*TrackingClickCreateRequest)(nil),                  // 3: chat.TrackingClickCreateRequest
	(*TrackingClickDetailByQueryRequest)(nil),           // 4: chat.TrackingClickDetailByQueryRequest
	(*TrackingClick)(nil),                               // 5: chat.TrackingClick
	(*TrackingClickScreenSize)(nil),                     // 6: chat.TrackingClickScreenSize
	(*TrackingClickDetailResponse)(nil),                 // 7: chat.TrackingClickDetailResponse
	(*TrackingClickUpdateClientSessionUnidRequest)(nil), // 8: chat.TrackingClickUpdateClientSessionUnidRequest
	(*timestamppb.Timestamp)(nil),                       // 9: google.protobuf.Timestamp
}
var file_LinkAttributionProto_tracking_click_proto_depIdxs = []int32{
	9,  // 0: chat.TrackingClickUpsert.createdAt:type_name -> google.protobuf.Timestamp
	9,  // 1: chat.TrackingClickUpsert.updatedAt:type_name -> google.protobuf.Timestamp
	9,  // 2: chat.TrackingClickUpsert.deletedAt:type_name -> google.protobuf.Timestamp
	0,  // 3: chat.TrackingClickUpsertResponse.data:type_name -> chat.TrackingClickUpsert
	2,  // 4: chat.TrackingClickCreateRequest.security:type_name -> chat.TrackingClickSecurity
	2,  // 5: chat.TrackingClickDetailByQueryRequest.security:type_name -> chat.TrackingClickSecurity
	9,  // 6: chat.TrackingClick.createdAt:type_name -> google.protobuf.Timestamp
	9,  // 7: chat.TrackingClick.updatedAt:type_name -> google.protobuf.Timestamp
	9,  // 8: chat.TrackingClick.deletedAt:type_name -> google.protobuf.Timestamp
	6,  // 9: chat.TrackingClick.screenSize:type_name -> chat.TrackingClickScreenSize
	5,  // 10: chat.TrackingClickDetailResponse.data:type_name -> chat.TrackingClick
	2,  // 11: chat.TrackingClickUpdateClientSessionUnidRequest.security:type_name -> chat.TrackingClickSecurity
	3,  // 12: chat.TrackingClickService.TrackingClickCreate:input_type -> chat.TrackingClickCreateRequest
	4,  // 13: chat.TrackingClickService.TrackingClickDetailByQuery:input_type -> chat.TrackingClickDetailByQueryRequest
	8,  // 14: chat.TrackingClickService.TrackingClickUpdateClientSessionUnid:input_type -> chat.TrackingClickUpdateClientSessionUnidRequest
	1,  // 15: chat.TrackingClickService.TrackingClickCreate:output_type -> chat.TrackingClickUpsertResponse
	7,  // 16: chat.TrackingClickService.TrackingClickDetailByQuery:output_type -> chat.TrackingClickDetailResponse
	7,  // 17: chat.TrackingClickService.TrackingClickUpdateClientSessionUnid:output_type -> chat.TrackingClickDetailResponse
	15, // [15:18] is the sub-list for method output_type
	12, // [12:15] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_LinkAttributionProto_tracking_click_proto_init() }
func file_LinkAttributionProto_tracking_click_proto_init() {
	if File_LinkAttributionProto_tracking_click_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_LinkAttributionProto_tracking_click_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingClickUpsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LinkAttributionProto_tracking_click_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingClickUpsertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LinkAttributionProto_tracking_click_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingClickSecurity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LinkAttributionProto_tracking_click_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingClickCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LinkAttributionProto_tracking_click_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingClickDetailByQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LinkAttributionProto_tracking_click_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingClick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LinkAttributionProto_tracking_click_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingClickScreenSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LinkAttributionProto_tracking_click_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingClickDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LinkAttributionProto_tracking_click_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingClickUpdateClientSessionUnidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_LinkAttributionProto_tracking_click_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_LinkAttributionProto_tracking_click_proto_goTypes,
		DependencyIndexes: file_LinkAttributionProto_tracking_click_proto_depIdxs,
		MessageInfos:      file_LinkAttributionProto_tracking_click_proto_msgTypes,
	}.Build()
	File_LinkAttributionProto_tracking_click_proto = out.File
	file_LinkAttributionProto_tracking_click_proto_rawDesc = nil
	file_LinkAttributionProto_tracking_click_proto_goTypes = nil
	file_LinkAttributionProto_tracking_click_proto_depIdxs = nil
}
